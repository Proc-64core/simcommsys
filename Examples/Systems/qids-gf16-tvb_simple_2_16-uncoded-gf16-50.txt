commsys<gf16,vector>
## Channel
qids<gf16>
# Version
1
# Vary Ps?
0
# Vary Pd?
1
# Vary Pi?
1
# Cap on I (0=uncapped)
0
# Fixed Ps value
0
# Fixed Pd value
0
# Fixed Pi value
0
## Modem
tvb<gf16,double>
# Version
3
#: Inner threshold
0
#: Outer threshold
0
# Normalize metrics between time-steps?
1
# Use batch receiver computation?
1
# Lazy computation of gamma?
1
# Global storage / caching of computed gamma values?
1
# n
2
# k
1
# codebook type (0=sparse, 1=random, 2=user[seq], 3=user[ran])
2
#: codebook name
simple
#: codebook count
1
#: codebook entries (table 0)
0000 1001
0001 1101
0010 1111
0100 1110
1000 0111
0011 1010
0110 0101
1100 1011
1011 1100
0101 0110
1010 0011
0111 1000
1110 0100
1111 0010
1101 0001
1001 0000
# marker type (0=zero, 1=random, 2=user[seq], 3=user[ran])
0
## Mapper
map_straight<vector,double>
## Codec
uncoded<double>
# Encoder
cached_fsm
#: Base Encoder
gnrcc<gf16>
#: Generator matrix (k x n vectors)
1	1
1
0001

# Block length
50
