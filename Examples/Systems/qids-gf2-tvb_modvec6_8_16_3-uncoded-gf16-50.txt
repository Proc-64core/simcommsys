commsys<gf2,vector>
## Channel
qids<gf2>
# Version
1
# Vary Ps?
0
# Vary Pd?
1
# Vary Pi?
1
# Cap on I (0=uncapped)
0
# Fixed Ps value
0
# Fixed Pd value
0
# Fixed Pi value
0
## Modem
tvb<gf2,double>
# Version
3
#: Inner threshold
0
#: Outer threshold
0
# Normalize metrics between time-steps?
1
# Use batch receiver computation?
1
# Lazy computation of gamma?
1
# Global storage / caching of computed gamma values?
1
# n
8
# k
4
# codebook type (0=sparse, 1=random, 2=user[seq], 3=user[ran])
2
#: codebook name
(8,16)-ld3-modvec6
#: codebook count
1
#: codebook entries (table 0)
0 1 1 1 0 0 1 1
0 0 0 1 1 1 1 1
1 0 1 0 1 1 1 1
1 1 1 1 1 0 0 1
0 0 1 1 1 0 0 0
0 1 0 0 1 0 0 1
1 0 0 0 0 0 0 1
1 1 1 0 0 0 0 0
1 1 0 0 1 0 1 0
0 1 0 1 0 0 0 0
0 0 1 1 0 1 0 1
0 0 0 0 0 1 1 0
1 0 0 0 1 1 0 0
1 1 0 0 0 1 1 1
1 1 1 1 1 1 1 0
0 1 1 0 1 1 0 0
# marker type (0=zero, 1=random, 2=user[seq], 3=user[ran])
2
#: marker vectors
6
0 0 0 0 0 0 0 0
0 1 0 0 1 0 0 1
1 1 1 1 1 1 1 1
1 0 1 1 0 0 1 0
1 0 1 1 0 1 1 0
0 1 0 0 1 1 0 1
## Mapper
map_straight<vector,double>
## Codec
uncoded<double>
# Encoder
cached_fsm
#: Base Encoder
gnrcc<gf16>
#: Generator matrix (k x n vectors)
1	1
1
0001

# Block length
50
